name: Continuous Deployment (CD)

on:
  push:
    tags:
      - "*" # Memicu workflow jika ada push tag seperti v1.0.0

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - uses: actions/checkout@v4

      # Step 2: Get the Git tag
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}

      # Step 3: Set up SSH access to Droplets
      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}

      # Step 4: Login to Docker Hub and Pull Docker Image on Droplets
      - name: Login to Docker Hub and Pull Docker Image
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          # Login ke Docker Hub
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

          # Pull Docker image dengan versi yang sesuai
          docker pull heilrose/backend-test:${{ env.VERSION }}
          EOF

      # Step 5: Deploy using Docker Compose
      - name: Deploy using Docker Compose
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          VERSION=${{ env.RELEASE_VERSION }}

          # Pastikan layanan menggunakan image terbaru
          docker compose pull

          # Jalankan layanan
          docker compose up -d
          EOF

      # Step 6: Show Logs in Real-Time
      - name: Show Logs in Real-Time
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ secrets.DROPLET_IP }} << 'EOF'
          docker compose logs -f
          EOF
